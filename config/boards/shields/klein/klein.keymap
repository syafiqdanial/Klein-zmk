/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define BTC  3
#define NON  4
#define MEDIA  5
#define BLU 6

behaviors {
          mt {
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
          };
          
          roundbkt {
            label= "round_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR>;
          };

          squarebkt {
            label= "square_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT>;
          };

          curlbkt {
            label= "curl_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC>;
          };

combos {
    compatible = "zmk,combos";
    combo_layer3 {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo 3>;
       };
    combo_layer4 {
            timeout-ms = <50>;
            key-positions = <0 9 32 33>;
            bindings = <&tog 4>;
       };
    combo_layer1 {
            timeout-ms = <50>;
            key-positions = <4 5 32 33>;
            bindings = <&tog 0>;
       };

    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
//          ------------------------------------------------------------------------------------------------------------
//          |  Q  |  W  |  E   |  R       |  T   |                                           |  Y   |  U    |  I    |  O   |   P   |
//          |  A  |  S  |  D   |  F       |  G   |                                           |  H   |  J    |  K    |  L   |   '   |
//          |  Z  |  X  |  C   |  V       |  B   |                                           |  N   |  M    |  ,    |  .   |   /   |
//                      | ESC  | lyr2/TAB |  TAB | BOOTLOADER |                         | MUTE | RET | BKSP | DEL |

            bindings = <
&kp Q          &kp W          &kp E          &kp R          &kp T               &kp Y          &kp U          &kp I          &kp O          &kp P
&mt LGUI A     &mt LALT S     &mt LCTRL D    &kp F          &kp G               &kp H          &kp J          &mt RCTRL K    &mt RALT L     &mt LGUI SQT
&kp Z          &kp X          &kp C          &kp V          &kp B               &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH
&kp ESC        &lt 2 TAB      &lt 1 SPACE    &bootloader                                       &kp K_MUTE     &mt RSHFT BSPC &kp SEMI       &kp ENTER
            >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        navnum_layer {

            bindings = <
&kp KP_PLUS     &kp N1         &kp N2         &kp N3         &kp LPAR            &kp RPAR       &kp CAPS       &kp UP         &kp KP_NUMLOCK &kp HOME
&kp KP_MINUS    &kp N4         &kp N5         &kp N6         &kp EQUAL           &kp PG_UP      &kp LEFT       &kp DOWN       &kp RIGHT      &kp END
&kp KP_MULTIPLY &kp N7         &kp N8         &kp N9         &kp DOT             &kp PG_DN      &none          &none          &none          &kp BSLH
&kp KP_DIVIDE   &kp N0         &trans         &bootloader                                       &bt BT_NXT     &kp BSPC       &kp DEL        &kp ENTER
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            
            bindings = <
&roundbkt      &squarebkt     &curlbkt       &kp GRAVE      &kp TILDE           &none          &kp F1         &kp F2         &kp F3         &kp F4
&kp EXCL       &kp AT         &kp HASH       &kp DOLLAR     &kp PIPE            &none          &kp F5         &kp F6         &kp F7         &kp F8
&kp PRCNT      &kp CARET      &kp AMPERSAND  &kp BACKSLASH  &kp UNDERSCORE      &none          &kp F9         &kp F10        &kp F11        &kp F12
&none          &none          &none          &none                                             &none          &none          &none          &none
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        btfc_layer {
            
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4        &none          &none          &none          &none          &none 
&none          &kp F4         &kp F5         &kp F6         &kp C_PREV          &none          &kp LSHFT      &kp LCTRL      &kp LALT       &kp LGUI
&none          &kp F1         &kp F2         &kp F3         &none               &none          &none          &none          &none          &none 
&none          &none          &none          &reset                                            &bootloader    &none          &none          &none 
            >;
        sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        empty_layer {
            
            bindings = <
&none       &none       &none       &none       &none              &none       &none       &none       &none       &none
&none       &none       &none       &none       &none              &none       &none       &none       &none       &none
&none       &none       &none       &none       &none              &none       &none       &none       &none       &none
&none       &none       &none       &none                                      &none       &none       &none       &none
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&kp LGUI       &kp LALT       &kp LCTRL      &kp LSHFT      &trans              &kp K_PREV     &kp K_VOL_DN   &kp K_VOL_UP   &kp K_NEXT     &trans
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&trans         &trans         &trans         &bootloader                                       &bootloader    &kp K_STOP2    &kp K_PP       &kp K_MUTE
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        blu_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &bt BT_CLR     &trans         &trans         &trans         &trans
&trans         &bt BT_SEL 3   &bt BT_SEL 4   &trans         &trans              &trans         &bt BT_PRV     &bt BT_NXT     &trans         &trans
&trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &trans              &trans         &trans         &trans         &trans         &trans
&trans         &trans         &trans         &trans         &trans                             &trans         &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
 
